{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B/MySQL/mysql/","title":"Mysql","text":""},{"location":"%E7%BC%96%E7%A8%8B/MySQL/mysql/#mysql","title":"MySQL","text":""},{"location":"%E7%BC%96%E7%A8%8B/MySQL/2%E3%80%81444/","title":"Index","text":""},{"location":"%E7%BC%96%E7%A8%8B/MySQL/2%E3%80%81444/#444","title":"444","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/","title":"Index","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/#kubernetes","title":"kubernetes","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/","title":"\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528pod","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#pod","title":"\u4e3a\u4ec0\u4e48\u9700\u8981pod","text":"<p>pod\u662fkubernetes\u7684\u539f\u5b50\u8c03\u5ea6\u5355\u4f4d\u3002</p> <ul> <li>\u80fd\u66f4\u597d\u7684\u5904\u7406\u5177\u6709\u8d85\u4eb2\u5bc6\u5173\u7cfb\u7684\u4e00\u7ec4\u5bb9\u5668\u3002</li> <li>\u5bb9\u5668\u8bbe\u8ba1\u6a21\u5f0f</li> <li>\u5171\u4eab\u672c\u5730\u7f51\u7edc\u548c\u540c\u4e00\u4e2avolume \u5728\u5355\u5bb9\u5668\u6a21\u5f0f\u4e2d\uff0c\u5982\u679cA B\u60f3\u8981\u5171\u4eab\u7f51\u7edc\u6808\u548cvolume\uff0c\u90a3\u4e48\u5c31\u8981\u4f7f\u7528\u7c7b\u4f3c <code>docker run --net --volume-from</code>\u8fd9\u6837\u7684\u547d\u4ee4 \u8fd9\u6837 A B\u4e24\u4e2a\u5bb9\u5668\u5c31\u6709\u5148\u540e\u987a\u5e8f \u662f\u62d3\u6251\u5173\u7cfb\u3002\u800c\u5728pod\u4e2d\uff0cpod\u7684\u5b9e\u73b0\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u4e2d\u95f4\u5bb9\u5668 <code>Infra</code>\u3002\u5982\u679c\u8981\u4f7f\u7528pod \u90a3\u4e48\u5c31\u5fc5\u987b\u5148\u521b\u5efa<code>infra</code>\u5bb9\u5668\u3002\u7528\u6237\u5b9a\u4e49\u7684\u5176\u4ed6\u5bb9\u5668\u5219\u901a\u8fc7 Join Network Namespace \u7684\u65b9\u5f0f\u4e0e infra \u5bb9\u5668\u5173\u8054\u5728\u4e00\u8d77</li> </ul> <p>\u5728kubernetes\u4e2d\u8fd9\u4e2a\u955c\u50cf\u5c31\u662f pause \u955c\u50cf\u3002\u5728\u540c\u4e00\u4e2apod\u4e2d\u7684\u5bb9\u5668\u6d41\u91cf\u8fdb\u51fa\u90fd\u901a\u8fc7infra\u5bb9\u5668\u5b8c\u6210\u7684\u3002 \u5171\u4eabvolume\u5219\u662f\u901a\u8fc7\u5728pod\u5c42\u5b9a\u4e49volume\u3002pod\u91cc\u9762\u7684\u5bb9\u5668\u53ea\u8981\u58f0\u660e\u6302\u8f7d\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: two-containers\nspec:\n  restartPolicy: Never\n  volumes:\n  - name: shared-data\n    hostPath:\n      path: /data\n  containers:\n  - name: nginx-container\n    image: nginx\n    volumeMounts:\n    - name: shared-data\n      mountPath: /usr/share/nginx/html\n  - name: debian-container\n    image: debian\n    volumeMounts:\n    - name: shared-data\n      mountPath: /pod-data\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"echo Hello from the debian container &gt; /pod-data/index.html\"]\n\n</code></pre> <ul> <li>\u8fb9\u8f66\u6a21\u5f0f</li> </ul> <p>\u901a\u8fc7\u53ef\u4ee5\u5171\u4eab\u7f51\u7edc\u548cvolume\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fb9\u8f66\u6a21\u5f0f\u3002\u6bd4\u5982\u5c06\u5e94\u7528\u5bb9\u5668\u548c\u5de5\u5177\u5bb9\u5668\u89e3\u8026\u3002</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: javaweb-2\nspec:\n  initContainers:\n  - image: geektime/sample:v2\n    name: war\n    command: [\"cp\", \"/sample.war\", \"/app\"]\n    volumeMounts:\n    - mountPath: /app\n      name: app-volume\n  containers:\n  - image: geektime/tomcat:7.0\n    name: tomcat\n    command: [\"sh\",\"-c\",\"/root/apache-tomcat-7.0.42-v2/bin/start.sh\"]\n    volumeMounts:\n    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps\n      name: app-volume\n    ports:\n    - containerPort: 8080\n      hostPort: 8001\n  volumes:\n  - name: app-volume\n    emptyDir: {}\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#pod_1","title":"\u6df1\u5165\u89e3\u6790pod\u5bf9\u8c61","text":"<p>pod\u66f4\u50cf\u4f20\u7edf\u90e8\u7f72\u6a21\u5f0f\u4e2d\u7684\u865a\u62df\u673a \u800c\u5bb9\u5668\u66f4\u50cf\u662f\u7528\u6237\u7a0b\u5e8f\u3002\u6240\u4ee5\u53ef\u4ee5\u5728pod\u7684\u5c5e\u6027\u4e2d\u5b9a\u4e49\uff1a\u8c03\u5ea6\u3001\u7f51\u7edc\u3001\u5b58\u50a8\u4ee5\u53ca\u5b89\u5168\u76f8\u5173\u7684\u5c5e\u6027\u3002</p> <ul> <li>NodeSelector</li> </ul> <p>\u5c06pod\u548cnode\u7ed1\u5b9a\u7684\u5b57\u6bb5</p> <pre><code>spec:\n  nodeSelector:\n    disktype: ssd  # \u53ea\u4f1a\u5c06\u8fd9\u4e2apod\u8c03\u5ea6\u5230 \u542b\u6709 disktype = ssd \u7684node\u4e0a\n</code></pre> <ul> <li>hostAlias</li> </ul> <p>\u6ce8\u5165\u5230pod\u4e2d\u5bb9\u5668\u7684 /etc/hosts \u6587\u4ef6\u4e2d</p> <pre><code>spec:\n  hostAliases:\n  - ip: \"127.0.0.1\"\n    hostnames:\n    - \"foo.local\"\n    - \"bar.local\"\n</code></pre> <ul> <li>shareProcessNamespace</li> </ul> <p>pod\u4e2d\u6240\u6709\u7684\u5bb9\u5668\u5171\u4eabPID namespace\u3002\u5176\u4e2d infra \u5bb9\u5668\u7684pid\u4e3a1</p> <ul> <li>initContainers \u5728\u542f\u52a8\u5bb9\u5668\u4e4b\u524d \u542f\u52a8\u7684\u4e00\u7ec4\u521d\u59cb\u5316\u5bb9\u5668\u3002</li> <li>containers pod\u4e2d\u542f\u52a8\u7684\u5bb9\u5668</li> <li>env \u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf</li> <li>envFrom \u4ececonfigMap\u4e2d\u8bfb\u53d6\u73af\u5883\u53d8\u91cf</li> </ul> <pre><code>spec:\n  containers:\n  - name: envar-demo-container\n    image: gcr.io/google-samples/node-hello:1.0\n    env:\n    - name: DEMO_GREETING\n      value: \"Hello from the environment\"\n    envFrom:\n    - configMapRef:\n      name: special-config\n</code></pre> <ul> <li>imagePullPolicy One of Always, Never, IfNotPresent. Defaults to Always\u3002if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.</li> <li>lifecycle</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#pod_2","title":"pod\u5bf9\u8c61\u4f7f\u7528\u8fdb\u9636","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#project-volume","title":"\u5173\u4e8e\u56db\u79cd Project Volume \uff08\u6295\u5c04\u6570\u636e\u5377\uff09","text":"<p>Project Volume \u4e2d\u7684\u6570\u636e\u662f\u4e3a\u5bb9\u5668\u63d0\u4f9b\u9884\u5148\u5b9a\u4e49\u597d\u7684\u6570\u636e\u3002\u5305\u62ec\u914d\u7f6e \u5bc6\u7801 \u7b49\u4fe1\u606f</p>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#configmap","title":"configMap","text":"<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coder\ndata:\n  config: |\n    I am a coder.\n    My blog is didispace.com.\n\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-mount-configmap\nspec:\n  volumes:\n    - name: ccc\n      configMap:\n        name: coder\n  containers:\n    - name: alpine\n      image: alpine\n      command: ['sh', \"-c\", \"sleep 3600;\"]\n      volumeMounts:\n        - mountPath: /config\n          readOnly: true\n          name: ccc\n</code></pre> <pre><code>/config # ls\nconfig\n/config # cat config\nI am a coder.\nMy blog is didispace.com.\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#secret","title":"secret","text":"<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: zhangyu\ntype: Opaque\ndata:\n  name: emhhbmd5dQ==\n  secret: VUludDhBcnJheQ==\n\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-mount-secret\nspec:\n  volumes:\n    - name: zzz\n      secret:\n        secretName: zhangyu\n  containers:\n    - name: alpine\n      image: alpine\n      command: ['sh', \"-c\", \"sleep 3600;\"]\n      volumeMounts:\n        - mountPath: /secret\n          readOnly: true\n          name: zzz\n</code></pre> <pre><code>/ # cd /secret/\n/secret # ls\nname    secret\n/secret # cat name\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#downwardapi","title":"downwardAPI","text":"<p>pod\u4e2d\u7684container\u53ef\u4ee5\u8bfb\u53d6pod\u7684\u4fe1\u606f\u3002\u6bd4\u5982pod\u7684\u6807\u7b7e\uff0ccpu\u7684\u4e2a\u6570\u7b49</p>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#serviceaccounttoken","title":"ServiceAccountToken","text":"<p>\u5982\u679c\u60f3\u5728pod\u4e2d\u63a7\u5236k8s\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6709\u6743\u9650\u53bb\u8bbf\u95eek8s\uff0c\u8fd9\u4e2aServiceAccountToken\u5c31\u662f\u8bbf\u95ee\u96c6\u7fa4\u7684\u51ed\u8bc1\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#livenessprobe","title":"\u6b63\u786e\u7684\u8bbe\u7f6e livenessProbe","text":"<p>\u5728containers \u7684\u914d\u7f6e\u4e2d\u914d\u7f6e livenessProbe \u3002\u6765\u505a\u5065\u5eb7\u68c0\u67e5\u3002\u8fd9\u6837\u5f53\u955c\u50cf\u7684\u72b6\u6001\u4e0d\u5065\u5eb7\u7684\u65f6\u5019 \u5c31\u4f1a\u91cd\u542fpod\u91cc\u9762\u7684\u5bb9\u5668\u3002pod\u7684restartPolicy\u5c5e\u6027\u5c31\u662f\u5728container\u7684\u72b6\u6001\u4e0d\u5065\u5eb7\u7684\u65f6\u5019\u505a\u7684\u52a8\u4f5c\uff0cRestart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always.</p>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8pod/#podpreset","title":"\u5b9a\u4e49 PodPreset","text":"<p>podpreset \u5c31\u662fpod\u7684\u9884\u8bbe\u7f6e\u3002\u5f53\u521b\u5efa\u7684pod label\u548cpodpreset\u5339\u914d\u7684\u65f6\u5019 \u5c31\u4f1a\u5c06podpreset\u4e2d\u9884\u8bbe\u7684\u503cmerge\u5230pod\u7684\u914d\u7f6e\u4e2d</p> <pre><code>apiVersion: settings.k8s.io/v1alpha1\nkind: PodPreset\nmetadata: \n    name: allow-database\nspec: \n    selector: \n        matchLabels: \n            role: frontend \n    env:\n        - name: DB_PORT \n          value: \"6379\"\n    volumeMounts: \n        - mountPath: /cache \n          name: cache-volume \n    volumes: \n        - name: cache-volume \n          emptyDir: {}\n</code></pre> <p>\u5f53\u521b\u5efa\u7684pod\u542b\u6709 role = frontend \u7684\u6807\u7b7e\u7684\u65f6\u5019 \u5c31\u4f1a\u5c06 preset\u4e2d\u7684\u503c merge\u5230\u521b\u5efa\u7684pod\u4e2d</p> <pre><code>apiVersion: v1 \nkind: Pod \nmetadata: \n    name: website\n    labels: \n        app: website \n        role: frontend \nspec: \n    containers: \n        - name: website \n          image: nginx \n          ports: \n            - containerPort: 80\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/sub1/sub2/test/","title":"Test","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/sub1/sub2/test/#test","title":"test","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/sub1/sub3/test/","title":"Test","text":""},{"location":"%E7%BC%96%E7%A8%8B/kubernetes/pod/sub1/sub3/test/#testmd","title":"test.md","text":""}]}